1]

1.직원 정보의 사번, 부서코드와 부서정보의 부서장, 부서코드를 중복제거 합집합으로 구해오는 쿼리
  (결과값으로 리턴되는 컬럼명 확인) 

SELECT DEPT_CODE, EMP_ID
FROM TEMP

UNION

SELECT DEPT_CODE, BOSS_ID
FROM TDEPT

;
--DEPT_CODE, EMP_ID


2.직원 정보의 사번, 부서코드와 부서정보의 부서장, 부서코드를 중복허용 합집합으로 구해오는 쿼리

SELECT DEPT_CODE, EMP_ID
FROM TEMP

UNION ALL

SELECT DEPT_CODE, BOSS_ID
FROM TDEPT

;

3.직원 정보의 사번, 부서코드와 부서정보의 부서장, 부서코드를 중복허용 합집합으로 구해오는 쿼리를
  사번별로 SORT

SELECT A.EMP_ID,A.DEPT_CODE
FROM
(SELECT EMP_ID, DEPT_CODE
FROM TEMP

UNION ALL

SELECT BOSS_ID, DEPT_CODE
FROM TDEPT) A

GROUP BY A.EMP_ID,A.DEPT_CODE

;



4.직원 정보의 사번, 부서코드와 부서정보의 부서장, 부서코드를 교집합으로 구해오는 쿼리

SELECT A.EMP_ID,A.DEPT_CODE
FROM
(SELECT EMP_ID, DEPT_CODE
FROM TEMP

INTERSECT

SELECT BOSS_ID, DEPT_CODE
FROM TDEPT) A

GROUP BY A.EMP_ID,A.DEPT_CODE

;



5.부서장이 아닌 직원의 사번,부서코드 구해오는 쿼리


SELECT EMP_ID, DEPT_CODE
FROM TEMP

MINUS

SELECT BOSS_ID, DEPT_CODE
FROM TDEPT


;


6. 사번이 2000년 이후 사번이고 급여가 3천만원보다 큰 직원의 사번,부서코드,급여정보와 

부서테이블의 사번,부서코드 정보 중 ‘A’로 시작하는 자료의 합집합을 구해오는 쿼리

SELECT EMP_ID, DEPT_CODE, SALARY
FROM TEMP 
WHERE TRUNC(EMP_ID/10000) > =2000
AND SALARY > 30000000

UNION 

SELECT BOSS_ID, DEPT_CODE, BOSS_ID
FROM TDEPT
WHERE SUBSTR(DEPT_CODE,0,1) ='A';






7. 직원정보 백업자료(TEMP1)와 직원정보 자료의 교집합을 구하고 

거기서 2020년 COMMISION에 존재하는 직원을 뺀 사번과 부서코드

--정답

SELECT EMP_ID, DEPT_CODE 
FROM TEMP 

INTERSECT 

SELECT EMP_ID, DEPT_CODE 
FROM TEMP01

MINUS

SELECT A.EMP_ID, B.DEPT_CODE
FROM TCOM A, TEMP B, TDEPT C
WHERE A.WORK_YEAR = '2020'
AND B.EMP_ID = A.EMP_ID
;

------틀린답안

SELECT EMP_ID,DEPT_CODE
FROM TEMP

INTERSECT

SELECT EMP_ID, DEPT_CODE
SELECT EMP_ID,DEPT_CODE
FROM TEMP01

MINUS >> --MINUS는 두개의 컬럼이 무조건 같아야 그렇지 않으면 합연산으로 출력됨(중복제거 안됨)

SELECT EMP_ID, NULL
FROM TCOM
WHERE WORK_YEAR = '2020'
;






2]
1. 사번별로 급여정보와 커미션 정보를 볼 수 있는 쿼리작성 ( OUTER 조인 없이 집합연산자 이용)
SELECT A.EMP_ID, SUM(A.SALARY), SUM(A.COMM)
FROM (
SELECT EMP_ID, SALARY, 0 COMM FROM TEMP
UNION
SELECT EMP_ID, 0 SALARY, COMM FROM TCOM) A
GROUP BY A.EMP_ID;






2. TEMP 와 TCOM에 존재하는 사번의 교집합을 구한 후, TEMP에서 TCOM에 존재하는 사번을 제외시킨 차집합을 구하고, 두개 결과의 합집합을 구해보자 

--교집합
SELECT EMP_ID
FROM TEMP
INTERSECT
SELECT EMP_ID
FROM TCOM

UNION
--차집합
SELECT EMP_ID
FROM TEMP
MINUS
SELECT EMP_ID
FROM TCOM

3. 첫번째 SELECT 에서는 TEMP의 사번과 부서코드를 UNION 뒤 문장에서는 TEMP1의 사번과 SALARY 를
   SELECT 하여 UNION 으로 결합하고 어떤 에러가 나는지 확인 

SELECT EMP_ID, DEPT_CODE, 0 SALARY
FROM TEMP

UNION

SELECT EMP_ID, DEPT_CODE(NULL), SALARY
FROM TEMP01



4. 첫 문장은 사번, 부서코드를 SELECT 하고 두 번째 문장에서는 사번,부서코드,SALARY 를 SELECT 하여 UNION으로 결합하고 어떤 에러가 나는지 확인

SELECT EMP_ID, DEPT_CODE
FROM TEMP

UNION

SELECT EMP_ID,  SALARY
FROM TEMP01
;
--대응하는 식과 같은 데이터 유형이여야 합니다.

5. TEMP의 EMP_ID 와 TEMP1의  EMP_ID를 UNION, UNION ALL, INTERSECT, MINUS로 각각 연결하여
   어떤 집합 연산자가 SORT 가 일어나는지 확인

SELECT EMP_ID
FROM TEMP

UNION

SELECT EMP_ID
FROM TEMP01
;

SELECT EMP_ID
FROM TEMP

UNION ALL

SELECT EMP_ID
FROM TEMP01
;

SELECT EMP_ID
FROM TEMP

INTERSECT

SELECT EMP_ID
FROM TEMP01
;

SELECT EMP_ID
FROM TEMP

MINUS

SELECT EMP_ID
FROM TEMP01
;


6. 1번 TEMP, 2번 TDEPT, 3번 TEMP1 에서 사번(TDEPT는 부서장ID)과 부서코드를 읽어와 테이블 순서대로 보여주는 쿼리


--출력 방법이 맞는지, 중복제거 어떻게 가능한지

SELECT EMP_ID, DEPT_CODE,0,NULL,0,NULL
FROM TEMP

UNION ALL

SELECT 0,NULL, BOSS_ID, DEPT_CODE,0,NULL
FROM TDEPT

UNION ALL

SELECT 0,NULL,0,NULL,EMP_ID, DEPT_CODE
FROM TEMP01

3]
1. 한국 표준시간대 확인
SELECT TZ_OFFSET('ROK') FROM DUAL;
  
2. 현재 설정된 표준시간대 확인
SELECT SESSIONTIMEZONE, CURRENT_DATE FROM DUAL;

3. 시간대변경
ALTER SESSION SET TIME_ZONE ='+05:00';

4. 한국의 타임존 확인
SELECT * FROM V$TIMEZONE_NAMES WHERE TZNAME LIKE 'R' || '%';


5. DATE형 컬럼 1개 짜리 TABLE 생성
CREATE TABLE T1 (A DATE);

6. 현재 포맷으로 T1에 INSERT
INSERT INTO T1 VALUES ('22-JUL-2020');

7. Date FORMAT 변경
ALTER SESSION SET NLS_DATE_FORMAT = 'YYYYMMDD HH24:MI:SS'

8. 변경전 FORMAT으로 입력 오류 확인
INSERT INTO T1 VALUES('22-JUL-2020');

9. 변경후 FORMAT으로 입력
INSERT INTO T1 VALUES('20200722');

10. SYSTIMESTAMP 를 통한 1/100초 확인
SELECT TO_CHAR(SYSTIMESTAMP, 'YYYYMMDD HH24MISS.FF2') FROM DUAL;

11. DBTIMEZONE 과 SESSIONTIMEZONE 비교
SELECT DBTIMEZONE, SESSIONTIMEZONE FROM DUAL;

12. SESSIONTIMEZONE 변경 
ALTER SESSION SET TIME_ZONE = '+09:00'

13. 11번 다시 수행
SELECT DBTIMEZONE, SESSIONTIMEZONE FROM DUAL;

14. EXTRACT 이용
SELECT EXTRACT (YEAR FROM SYSDATE) FROM DUAL;